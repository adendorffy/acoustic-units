Timer unit: 1e-09 s

Total time: 0.854375 s
File: /Users/daneladendorff/Desktop/adendorffy/acoustic-units/dist.py
Function: get_features_and_filenames at line 38

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    38                                           @profile
    39                                           def get_features_and_filenames(sorted_paths):
    40         1          0.0      0.0      0.0      filenames = []
    41         1       1000.0   1000.0      0.0      features = []
    42      3001   15872000.0   5288.9      1.9      for path in tqdm(sorted_paths, desc="Appending Features"):
    43      3000    6259000.0   2086.3      0.7          filenames.append(path.stem)
    44      3000  831878000.0 277292.7     97.4          feature = np.load(path)
    45      3000     365000.0    121.7      0.0          features.append(feature)
    46         1          0.0      0.0      0.0      return features, filenames

Total time: 2.22109 s
File: /Users/daneladendorff/Desktop/adendorffy/acoustic-units/dist.py
Function: main at line 49

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    49                                           @profile
    50                                           def main():
    51                                               # Process chunks
    52         1       1000.0   1000.0      0.0      gamma = 0.1
    53         1 1269409000.0    1e+09     57.2      paths = list(Path(f"features/{gamma}").rglob("*.npy"))
    54                                           
    55         1   94188000.0    9e+07      4.2      sorted_paths = sorted(paths, key=lambda x: int(x.stem.split("_")[-1]))
    56         1     298000.0 298000.0      0.0      sorted_paths = sorted_paths[0:3000]
    57         1       1000.0   1000.0      0.0      sample_size = len(sorted_paths)
    58                                           
    59         1  856273000.0    9e+08     38.6      features, filenames = get_features_and_filenames(sorted_paths)
    60                                           
    61         1          0.0      0.0      0.0      chunk_limit = 5000000
    62         1       2000.0   2000.0      0.0      num_pairs = sample_size * (sample_size - 1) // 2
    63         1       1000.0   1000.0      0.0      num_chunks = (num_pairs + chunk_limit - 1) // chunk_limit
    64                                           
    65         1      10000.0  10000.0      0.0      print(f"num_pairs: {num_pairs}")
    66         1       2000.0   2000.0      0.0      print(f"num_chunks: {num_chunks}")
    67         1       2000.0   2000.0      0.0      print(f"num_samples: {sample_size}")
    68                                           
    69                                               # Preallocate sparse matrix in LIL format (efficient for incremental additions)
    70         1     843000.0 843000.0      0.0      dist_sparse = sp.lil_matrix((sample_size, sample_size), dtype=np.float32)
    71                                           
    72         1       1000.0   1000.0      0.0      pairs = pair_generator(sample_size)
    73         1      58000.0  58000.0      0.0      for i, j in tqdm(pairs, len=num_pairs, desc="Calculating Disatances", unit="Pair"):
    74                                                   i, j, dist = cal_dist_per_pair((i, j), (features[i], features[j]))
    75                                                   dist_sparse[i, j] = dist  # Fill the sparse matrix
    76                                                   dist_sparse[j, i] = dist  # Symmetric distance
    77                                           
    78                                               # Convert to a compressed sparse format for efficient storage
    79                                               dist_sparse = dist_sparse.tocoo()
    80                                               np.savez_compressed("output/test/sparse_dist_mat.npz", dist_sparse)

  0.85 seconds - /Users/daneladendorff/Desktop/adendorffy/acoustic-units/dist.py:38 - get_features_and_filenames
  2.22 seconds - /Users/daneladendorff/Desktop/adendorffy/acoustic-units/dist.py:49 - main
