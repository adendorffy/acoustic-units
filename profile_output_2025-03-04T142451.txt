Timer unit: 1e-09 s

Total time: 7.10477 s
File: /home/danel/Documents/acoustic-units/get_dist_mat.py
Function: load_units at line 45

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    45                                           @profile
    46                                           def load_units(path: Path) -> np.ndarray:
    47                                               """
    48                                               Loads a NumPy array from the given file path.
    49                                           
    50                                               Args:
    51                                                   path (Path): Path to the .npy file.
    52                                           
    53                                               Returns:
    54                                                   np.ndarray: Loaded NumPy array.
    55                                               """
    56     63137 7104774186.0 112529.5    100.0      return np.load(path)

Total time: 555.054 s
File: /home/danel/Documents/acoustic-units/get_dist_mat.py
Function: main at line 96

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    96                                           @profile
    97                                           def main() -> None:
    98                                               """
    99                                               Main function that:
   100                                               - Loads feature data from files.
   101                                               - Computes pairwise edit distances in chunks.
   102                                               - Saves distance matrix and file metadata.
   103                                               """
   104         1      19520.0  19520.0      0.0      feat_dir = Path("features/dusted_units/0.2/")
   105                                               
   106         1        226.0    226.0      0.0      file_map = {}
   107         1        139.0    139.0      0.0      features = []
   108     63138 1009554191.0  15989.6      0.2      for i, feature in enumerate(feat_dir.rglob("**/*.npy")):
   109     63137   25057571.0    396.9      0.0          file_map[i] = feature.stem
   110     63137 7385088930.0 116969.3      1.3          features.append(load_units(feature))
   111                                           
   112         1        232.0    232.0      0.0      sample_size = i
   113         1      15727.0  15727.0      0.0      print(f"sample_size: {sample_size}")
   114         1      18407.0  18407.0      0.0      dist_mat = np.zeros((sample_size, sample_size), dtype=np.float32)
   115                                           
   116                                               
   117         1        187.0    187.0      0.0      csv_path = "output/dusted/info.csv"
   118         1       7811.0   7811.0      0.0      dist_mat_out_path = Path("output/dusted/dist_mat.npz")
   119         1      69808.0  69808.0      0.0      dist_mat_out_path.parent.mkdir(parents=True, exist_ok=True)
   120                                           
   121         1        219.0    219.0      0.0      chunk_limit = 1000000
   122         1       1097.0   1097.0      0.0      num_pairs = sample_size * (sample_size - 1) // 2
   123         1        543.0    543.0      0.0      num_chunks = (num_pairs + chunk_limit - 1) // chunk_limit 
   124                                           
   125        61        4e+10    7e+08      7.3      for chunk in tqdm(get_batch_of_paths(sample_size, chunk_limit=chunk_limit), total=num_chunks, desc="Processing chunks"):
   126  61000061        2e+11   2538.6     27.9          chunk_units = [{(i,j) : (features[i], features[j])} for i, j in chunk]
   127                                           
   128       122        1e+10    9e+07      2.0          with Pool(7) as pool:
   129        61        3e+11    5e+09     55.5              chunk_results = pool.map(calculate_distance_per_chunk, chunk_units)
   130                                                   
   131  60000060        1e+10    247.0      2.7          for i,j,dist in chunk_results:
   132  60000000        2e+10    288.4      3.1              dist_mat[i, j] = dist
   133                                                   
   134                                               
   135                                               info_to_csv(csv_path, file_map)
   136                                               np.savez_compressed(dist_mat_out_path, dist_mat)

  7.10 seconds - /home/danel/Documents/acoustic-units/get_dist_mat.py:45 - load_units
555.05 seconds - /home/danel/Documents/acoustic-units/get_dist_mat.py:96 - main
